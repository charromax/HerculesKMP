[versions]
agp = "8.1.4"
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.8.2"
compose = "1.6.2"
compose-plugin = "1.5.12"
composeVectorizeCore = "0.4.0"
graphics = "0.9.0"
imageLoader = "1.7.1"
koinAndroid = "3.4.3"
koinCore = "3.3.3"
kotlin = "1.9.22"
google = "4.4.1"
ktorVersion = "2.3.8"
moko = "0.16.1"
resourcesGenerator = "0.23.0"
statelyCommon = "2.0.5"
uuid = "0.8.2"
voyagerNavigator = "1.0.0"
sqlDelight = "2.0.1"

[libraries]
compose-vectorize-core = { module = "dev.sergiobelda.compose.vectorize:compose-vectorize-core", version.ref = "composeVectorizeCore" }
graphics = { module = "dev.icerock.moko:graphics", version.ref = "graphics" }
image-loader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "imageLoader" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
firebase-sdk = { group = "dev.gitlive", name = "firebase-database", version = "1.11.1" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koinAndroid" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koinCore" }
kt-serialization = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version = "1.6.2" }
ktor-client-core = {group = "io.ktor", name = "ktor-client-core", version.ref= "ktorVersion"}
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorVersion" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorVersion" }
ktor-android = {group = "io.ktor", name = "ktor-client-android", version.ref = "ktorVersion" }
ktor-ios = {group = "io.ktor", name = "ktor-client-darwin", version.ref = "ktorVersion"}
mvvm-compose = { module = "dev.icerock.moko:mvvm-compose", version.ref = "moko" }
mvvm-core = { module = "dev.icerock.moko:mvvm-core", version.ref = "moko" }
mvvm-databinding = { module = "dev.icerock.moko:mvvm-databinding", version.ref = "moko" }
mvvm-flow = { module = "dev.icerock.moko:mvvm-flow", version.ref = "moko" }
mvvm-flow-compose = { module = "dev.icerock.moko:mvvm-flow-compose", version.ref = "moko" }
mvvm-flow-resources = { module = "dev.icerock.moko:mvvm-flow-resources", version.ref = "moko" }
mvvm-livedata = { module = "dev.icerock.moko:mvvm-livedata", version.ref = "moko" }
mvvm-livedata-compose = { module = "dev.icerock.moko:mvvm-livedata-compose", version.ref = "moko" }
mvvm-livedata-glide = { module = "dev.icerock.moko:mvvm-livedata-glide", version.ref = "moko" }
mvvm-livedata-material = { module = "dev.icerock.moko:mvvm-livedata-material", version.ref = "moko" }
mvvm-livedata-resources = { module = "dev.icerock.moko:mvvm-livedata-resources", version.ref = "moko" }
mvvm-livedata-swiperefresh = { module = "dev.icerock.moko:mvvm-livedata-swiperefresh", version.ref = "moko" }
mvvm-state = { module = "dev.icerock.moko:mvvm-state", version.ref = "moko" }
mvvm-test = { module = "dev.icerock.moko:mvvm-test", version.ref = "moko" }
mvvm-viewbinding = { module = "dev.icerock.moko:mvvm-viewbinding", version.ref = "moko" }
resources = { module = "dev.icerock.moko:resources", version.ref = "resourcesGenerator" }
resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "resourcesGenerator" }
stately-common = { module = "co.touchlab:stately-common", version.ref = "statelyCommon" }
uuid = { module = "com.benasher44:uuid", version.ref = "uuid" }
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyagerNavigator" }

sqldelight-androidDriver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqldelight-nativeDriver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqldelight-primitiveAdapters = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
googleServices = { id = "com.google.gms.google-services", version.ref = "google" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
kotlinxSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }